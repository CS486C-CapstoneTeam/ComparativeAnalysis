knitr::opts_chunk$set(echo = TRUE)
data <- read.csv("Sample Sales Data(2025-01-15 10_13am (2)).csv")
str(data)
class(data)
str(data)
unique(data)
unique(data$STATE)
unique(data$OPPORTUNITY_TYPE)
unique(data$FINANCE_TYPE)
unique(data$TENURE)
unique(data$PRODUCTION_COMMISSION_TYPE_CATEGORY)
new_data <- data[data == ''] <- NA
unique(new_data)
new_data <- data
data[data == ''] <- NA
unique(new_data)
new_data <- data
data[data == ''] <- NA
head(new_data)
new_data <- data
new_data[new_data == ''] <- NA
head(new_data)
dmy <- dummyVars(" ~ .", data = new_data)
knitr::opts_chunk$set(echo = TRUE)
library( caret )
data <- read.csv("Sample Sales Data(2025-01-15 10_13am (2)).csv")
new_data <- data
new_data[new_data == ''] <- NA
head(new_data)
dmy <- dummyVars(" ~ .", data = new_data)
print(new_data)
new_data <- data
new_data[new_data == ''] <- NA
head(new_data)
dmy <- dummyVars(" ~ .", data = new_data)
print(dmy)
new_data <- data
new_data[new_data == ''] <- NA
head(new_data)
dmy <- dummyVars(" ~ .", data = new_data)
trsf <- data.frame(predict(dmy, newdata = new_data))
knitr::opts_chunk$set(echo = TRUE)
library( caret )
data <- read.csv("Sample Sales Data(2025-01-15 10_13am (2)).csv")
is.na(data)
any(is.na(data))
colSums(is.na(data))
unqiue(data$PRODUCTION_IS_DIY)
unique(data$PRODUCTION_IS_DIY)
count(unique(data$PRODUCTION_IS_DIY))
count((data$PRODUCTION_IS_DIY))
sum(unique(data$PRODUCTION_IS_DIY))
data_complete <- data[complete.cases(data),]
data_complete
min(data$PRODUCTION_EFP)
View(data)
unique(data$STATE)
unique(data$ZIP_CODE)
data.clean <- data
data.clean$PRODUCTION_IS_VALID_INSTALL = ifelse(data.clean$PRODUCTION_IS_VALID_INSTALL == "TRUE", 1,0)
data.clean <- data
data.clean$PRODUCTION_IS_VALID_INSTALL = ifelse(data.clean$PRODUCTION_IS_VALID_INSTALL == "TRUE", 1,0)
data.clean$PRODUCTION_IS_SAME_DAY = ifelse(data.clean$PRODUCTION_IS_SAME_DAY == "TRUE", 1,0)
data.clean <- data
data.clean$PRODUCTION_IS_VALID_INSTALL = ifelse(data.clean$PRODUCTION_IS_VALID_INSTALL == "TRUE", 1,0)
data.clean$PRODUCTION_IS_SAME_DAY = ifelse(data.clean$PRODUCTION_IS_SAME_DAY == "TRUE", 1,0)
data.clean[data.clean == ""] <- NA
unique(data.clean$STATE)
data.clean <- data
data.clean$PRODUCTION_IS_VALID_INSTALL = ifelse(data.clean$PRODUCTION_IS_VALID_INSTALL == "TRUE", 1,0)
data.clean$PRODUCTION_IS_SAME_DAY = ifelse(data.clean$PRODUCTION_IS_SAME_DAY == "TRUE", 1,0)
data.clean[data.clean == ""] <- NA
data.reduced <- data.clean[ -c(
ZIP_CODE,
OPPORTUNITY_CREATED_DATE,
) ]
data.clean <- data
data.clean$PRODUCTION_IS_VALID_INSTALL = ifelse(data.clean$PRODUCTION_IS_VALID_INSTALL == "TRUE", 1,0)
data.clean$PRODUCTION_IS_SAME_DAY = ifelse(data.clean$PRODUCTION_IS_SAME_DAY == "TRUE", 1,0)
data.clean[data.clean == ""] <- NA
data.reduced <- data.clean[ -c(
'ZIP_CODE',
'OPPORTUNITY_CREATED_DATE'
) ]
data.reduced <- data.clean[ -REMOVE_COLS ]
REMOVE_COLS <- c(
"ZIP_CODE",
"OPPORTUNITY_CREATED_DATE",
"MANAGEMENT_GROUP_LEADER_ID",
"SENIOR_MANAGEMENT_GROUP_LEADER_ID",
"REGION_LEADER_ID",
"SENIOR_REGION_LEADER_ID",
"PARTNERSHIP_LEADER_ID",
"PRE_INSTALL_SURVEY_ID",
"PRE_INSTALL_SURVEY_CREATED_DATE_TIME",
"PRE_INSTALL_LATEST_SURVEY_PASS_DATE",
"PRODUCTION_INSTALL_DATE_TIME",
"PRODUCTION_IS_DIY",
"CANCELLATION_DATE_TIME"
)
data.reduced <- data.clean[ -REMOVE_COLS ]
data.reduced <- subset(data.clean, -REMOVE_COLS)
data.reduced <- subset(data.clean, REMOVE_COLS)
data.reduced <- data.clean[ -REMOVE_COLS ]
REMOVE_COLS <- c(
"ZIP_CODE",
"OPPORTUNITY_CREATED_DATE",
"MANAGEMENT_GROUP_LEADER_ID",
"SENIOR_MANAGEMENT_GROUP_LEADER_ID",
"REGION_LEADER_ID",
"SENIOR_REGION_LEADER_ID",
"PARTNERSHIP_LEADER_ID",
"PRE_INSTALL_SURVEY_ID",
"PRE_INSTALL_SURVEY_CREATED_DATE_TIME",
"PRE_INSTALL_LATEST_SURVEY_PASS_DATE",
"PRODUCTION_INSTALL_DATE_TIME",
"PRODUCTION_IS_DIY",
"CANCELLATION_DATE_TIME"
)
data.reduced <- data.clean %>%
subset(data.clean, select=-REMOVE_COLS)
knitr::opts_chunk$set(echo = TRUE)
library( caret )
library( dplyr )
data.reduced <- data.clean %>%
subset(data.clean, select=-REMOVE_COLS)
data.reduced <- subset(data.clean, select=-REMOVE_COLS)
data.reduced <- subset(data.clean, select=-c(
"ZIP_CODE",
"OPPORTUNITY_CREATED_DATE",
"MANAGEMENT_GROUP_LEADER_ID",
"SENIOR_MANAGEMENT_GROUP_LEADER_ID",
"REGION_LEADER_ID",
"SENIOR_REGION_LEADER_ID",
"PARTNERSHIP_LEADER_ID",
"PRE_INSTALL_SURVEY_ID",
"PRE_INSTALL_SURVEY_CREATED_DATE_TIME",
"PRE_INSTALL_LATEST_SURVEY_PASS_DATE",
"PRODUCTION_INSTALL_DATE_TIME",
"PRODUCTION_IS_DIY",
"CANCELLATION_DATE_TIME"
))
data.reduced <- data.clean %>%
select(-REMOVE_COLS)
data.reduced <- data.clean[,-REMOVE_COLS]
REMOVE_COLS <- c(
`ZIP_CODE`,
`OPPORTUNITY_CREATED_DATE`,
`MANAGEMENT_GROUP_LEADER_ID`,
`SENIOR_MANAGEMENT_GROUP_LEADER_ID`,
`REGION_LEADER_ID`,
`SENIOR_REGION_LEADER_ID`,
`PARTNERSHIP_LEADER_ID`,
`PRE_INSTALL_SURVEY_ID`,
`PRE_INSTALL_SURVEY_CREATED_DATE_TIME`,
`PRE_INSTALL_LATEST_SURVEY_PASS_DATE`,
`PRODUCTION_INSTALL_DATE_TIME`,
`PRODUCTION_IS_DIY`,
`CANCELLATION_DATE_TIME`
)
data.reduced <- subset(data.clean, select=-REMOVE_COLS)
REMOVE_COLS <- c(
`ZIP_CODE`,
`OPPORTUNITY_CREATED_DATE`,
`MANAGEMENT_GROUP_LEADER_ID`,
`SENIOR_MANAGEMENT_GROUP_LEADER_ID`,
`REGION_LEADER_ID`,
`SENIOR_REGION_LEADER_ID`,
`PARTNERSHIP_LEADER_ID`,
`PRE_INSTALL_SURVEY_ID`,
`PRE_INSTALL_SURVEY_CREATED_DATE_TIME`,
`PRE_INSTALL_LATEST_SURVEY_PASS_DATE`,
`PRODUCTION_INSTALL_DATE_TIME`,
`PRODUCTION_IS_DIY`,
`CANCELLATION_DATE_TIME`
)
data.reduced <- within(data.clean, rm(REMOVE_COLS))
REMOVE_COLS <- c(
`ZIP_CODE`,
`OPPORTUNITY_CREATED_DATE`,
`MANAGEMENT_GROUP_LEADER_ID`,
`SENIOR_MANAGEMENT_GROUP_LEADER_ID`,
`REGION_LEADER_ID`,
`SENIOR_REGION_LEADER_ID`,
`PARTNERSHIP_LEADER_ID`,
`PRE_INSTALL_SURVEY_ID`,
`PRE_INSTALL_SURVEY_CREATED_DATE_TIME`,
`PRE_INSTALL_LATEST_SURVEY_PASS_DATE`,
`PRODUCTION_INSTALL_DATE_TIME`,
`PRODUCTION_IS_DIY`,
`CANCELLATION_DATE_TIME`
)
REMOVE_COLS <- c(
ZIP_CODE,
`OPPORTUNITY_CREATED_DATE`,
`MANAGEMENT_GROUP_LEADER_ID`,
`SENIOR_MANAGEMENT_GROUP_LEADER_ID`,
`REGION_LEADER_ID`,
`SENIOR_REGION_LEADER_ID`,
`PARTNERSHIP_LEADER_ID`,
`PRE_INSTALL_SURVEY_ID`,
`PRE_INSTALL_SURVEY_CREATED_DATE_TIME`,
`PRE_INSTALL_LATEST_SURVEY_PASS_DATE`,
`PRODUCTION_INSTALL_DATE_TIME`,
`PRODUCTION_IS_DIY`,
`CANCELLATION_DATE_TIME`
)
data.clean[,-REMOVE_COLS]
data.clean[ , !names(data.clean) %in% REMOVE_COLS] ## works as expected
data.reduced <- data.clean[ , !names(data.clean) %in% REMOVE_COLS] ## works as expected
data.clean <- data
data.clean$PRODUCTION_IS_VALID_INSTALL = ifelse(data.clean$PRODUCTION_IS_VALID_INSTALL == "TRUE", 1,0)
data.clean$PRODUCTION_IS_SAME_DAY = ifelse(data.clean$PRODUCTION_IS_SAME_DAY == "TRUE", 1,0)
data.clean[data.clean == ""] <- NA
data.clean %>%
mutate( CLOSED_SALE = case_when(PRODUCTION_EFP != NA ~ 0, PRODUCTION_EFP > 0 ~ 1 ) )
data.clean <- data
data.clean$PRODUCTION_IS_VALID_INSTALL = ifelse(data.clean$PRODUCTION_IS_VALID_INSTALL == "TRUE", 1,0)
data.clean$PRODUCTION_IS_SAME_DAY = ifelse(data.clean$PRODUCTION_IS_SAME_DAY == "TRUE", 1,0)
data.clean[data.clean == ""] <- NA
data.clean <- data.clean %>%
mutate( CLOSED_SALE = case_when(PRODUCTION_EFP == NA ~ 0, PRODUCTION_EFP != NA ~ 1) )
data.clean <- data.clean %>%
mutate( CLOSED_SALE = case_when(PRODUCTION_EFP == NA ~ 0, CLOSED_SALE = PRODUCTION_EFP != NA ~ 1) )
Sales_data <- read.csv("cleaned_data")
Sales_data <- read.csv("cleaned_data")
View(new_data)
View(dmy)
knitr::opts_chunk$set(echo = TRUE)
library( caret )
library( dplyr )
data <- read.csv("Sample Sales Data(2025-01-15 10_13am (2)).csv")
library(dplyr)
data %>%
group_by(ACCOUNT) %>%
summarise(no_rows = length(ID))```
colSums(is.na(data))
data_complete <- data[complete.cases(data),]
data_complete
min(data$PRODUCTION_EFP)
data.clean <- data
data.clean$PRODUCTION_IS_VALID_INSTALL = ifelse(data.clean$PRODUCTION_IS_VALID_INSTALL == "TRUE", 1,0)
data.clean$PRODUCTION_IS_SAME_DAY = ifelse(data.clean$PRODUCTION_IS_SAME_DAY == "TRUE", 1,0)
data.clean[data.clean == ""] <- NA
data.clean <- data.clean %>%
mutate(
CLOSED_SALE = case_when(
is.na(PRODUCTION_EFP) ~ 0,
!is.na(PRODUCTION_EFP) ~ 1
)
)
knitr::opts_chunk$set(echo = TRUE)
Sales_data <- data.clean
head(Sales_data)
REMOVE_COLS <- c(
"ZIP_CODE",
"OPPORTUNITY_CREATED_DATE",
"MANAGEMENT_GROUP_LEADER_ID",
"SENIOR_MANAGEMENT_GROUP_LEADER_ID",
"REGION_LEADER_ID",
"SENIOR_REGION_LEADER_ID",
"PARTNERSHIP_LEADER_ID",
"PRE_INSTALL_SURVEY_ID",
"PRE_INSTALL_SURVEY_CREATED_DATE_TIME",
"PRE_INSTALL_LATEST_SURVEY_PASS_DATE",
"PRODUCTION_INSTALL_DATE_TIME",
"PRODUCTION_IS_DIY",
"CANCELLATION_DATE_TIME"
)
data.reduced <- data.clean[ , !names(data.clean) %in% REMOVE_COLS]
data.reduced.noupgrade <- data.reduced[data.reduced$OPPORTUNITY_TYPE != "Upgrade", ]
my_table <- table(data.reduced.noupgrade$TENURE, data.reduced.noupgrade$CLOSED_SALE)
print(my_table)
proportions_table <- prop.table(my_table, margin = 1)
# "margin = 1" calculates proportions for each row (i.e., for each level of variable1)
# Print the table
print(proportions_table)
test.df <- as.data.frame( proportions_table )
test.df <- test.df[4:6,]
ggplot(data=test.df, aes(x=Var1, y=Freq, fill=Var1)) +
geom_bar(stat = "identity") +
labs(title="Proportion of Successful Sales vs. Sales Tenure",
x="Sales Tenure", y="Proportion of Successful Sales") +
theme(legend.position="none")
# Percentile Testing
test.df <- as.data.frame( proportions_table )
test.df <- test.df[4:6,]
ggplot(data=test.df, aes(x=Var1, y=Freq, fill=Var1)) +
geom_bar(stat = "identity") +
labs(title="Proportion of Successful Sales vs. Sales Tenure",
x="Sales Tenure", y="Proportion of Successful Sales") +
theme(legend.position="none")
View(data.clean)
#boxplot
ggplot(data.clean, aes(Tenure, PRODUCTION_EFP))
#boxplot
ggplot(data.clean, aes(data.clean$Tenure, data.clean$PRODUCTION_EFP))
#boxplot
ggplot(data.clean, aes(data.clean$Tenure, data.clean$PRODUCTION_EFP)) +
geom_boxplot()
#Temp Frame
data.clean_noNA <- data.clean[complete.cases(data.clean),]
#boxplot
ggplot(data.clean_noNA, aes(data.clean_noNA$Tenure, data.clean_noNA$PRODUCTION_EFP)) +
geom_boxplot()
#Temp Frame
data.clean_noNA <- data.clean[complete.cases(data.clean),]
#boxplot
ggplot(data.clean_noNA, aes(data.clean_noNA$Tenure, data.clean_noNA$PRODUCTION_EFP)) +
geom_boxplot()
#Temp Frame
data.clean_noNA <- data.clean[complete.cases(data.clean),] %>% group_by(Tenure)
#Temp Frame
data.clean_noNA <- data.clean[complete.cases(data.clean),] %>% group_by(TENURE)
#boxplot
ggplot(data.clean_noNA, aes(data.clean_noNA$Tenure, data.clean_noNA$PRODUCTION_EFP)) +
geom_boxplot()
#Temp Frame
data.clean_noNA <- data.clean[complete.cases(data.clean),] %>% group_by(TENURE)
#boxplot
ggplot(data.clean_noNA, aes(data.clean_noNA$TENURE, data.clean_noNA$PRODUCTION_EFP)) +
geom_boxplot()
#Temp Frame
data.clean_noNA <- data.clean[complete.cases(data.clean),] %>% group_by(TENURE)
#boxplot
ggplot(data.clean_noNA, aes(data.clean_noNA$TENURE, data.clean_noNA$PRODUCTION_TOTAL_RMR)) +
geom_boxplot()
min(data.clean_noNA)
min(data.clean_noNA$PRODUCTION_TOTAL_RMR)
#Temp Frame
data.clean_noNA <- data.clean[complete.cases(data.clean),] %>% group_by(TENURE)
%>% filter(!any(PRODUCTION_TOTAL_RMR))
#Temp Frame
data.clean_noNA <- data.clean[complete.cases(data.clean),] %>% group_by(TENURE) %>% filter(!any(PRODUCTION_TOTAL_RMR))
#boxplot
ggplot(data.clean_noNA, aes(data.clean_noNA$TENURE, data.clean_noNA$PRODUCTION_TOTAL_RMR)) +
geom_boxplot()
#Temp Frame
data.clean_noNA <- data.clean[complete.cases(data.clean),] %>% filter(!any(PRODUCTION_TOTAL_RMR)) %>% group_by(TENURE)
#boxplot
ggplot(data.clean_noNA, aes(data.clean_noNA$TENURE, data.clean_noNA$PRODUCTION_TOTAL_RMR)) +
geom_boxplot()
head(data.clean_noNA)
knitr::opts_chunk$set(echo = TRUE)
# Pulling Data
Sales_data <- data_clean_noNA
# Pulling Data
Sales_data <- data_clean_noNA.csv
# Pulling Data
Sales_data <- read.csv("data_clean_noNA.csv")
# Percentile Testing
test.df <- as.data.frame( proportions_table )
knitr::opts_chunk$set(echo = TRUE)
library( caret )
library( dplyr )
data <- read.csv("Sample Sales Data(2025-01-15 10_13am (2)).csv")
library(dplyr)
data %>%
group_by(ACCOUNT) %>%
summarise(no_rows = length(ID))```
colSums(is.na(data))
data_complete <- data[complete.cases(data),]
data_complete
min(data$PRODUCTION_EFP)
data.clean <- data
data.clean$PRODUCTION_IS_VALID_INSTALL = ifelse(data.clean$PRODUCTION_IS_VALID_INSTALL == "TRUE", 1,0)
data.clean$PRODUCTION_IS_SAME_DAY = ifelse(data.clean$PRODUCTION_IS_SAME_DAY == "TRUE", 1,0)
data.clean[data.clean == ""] <- NA
data.clean <- data.clean %>%
mutate(
CLOSED_SALE = case_when(
is.na(PRODUCTION_EFP) ~ 0,
!is.na(PRODUCTION_EFP) ~ 1
)
)
REMOVE_COLS <- c(
"ZIP_CODE",
"OPPORTUNITY_CREATED_DATE",
"MANAGEMENT_GROUP_LEADER_ID",
"SENIOR_MANAGEMENT_GROUP_LEADER_ID",
"REGION_LEADER_ID",
"SENIOR_REGION_LEADER_ID",
"PARTNERSHIP_LEADER_ID",
"PRE_INSTALL_SURVEY_ID",
"PRE_INSTALL_SURVEY_CREATED_DATE_TIME",
"PRE_INSTALL_LATEST_SURVEY_PASS_DATE",
"PRODUCTION_INSTALL_DATE_TIME",
"PRODUCTION_IS_DIY",
"CANCELLATION_DATE_TIME"
)
data.reduced <- data.clean[ , !names(data.clean) %in% REMOVE_COLS]
data.reduced.noupgrade <- data.reduced[data.reduced$OPPORTUNITY_TYPE != "Upgrade", ]
my_table <- table(data.reduced.noupgrade$TENURE, data.reduced.noupgrade$CLOSED_SALE)
print(my_table)
proportions_table <- prop.table(my_table, margin = 1)
# "margin = 1" calculates proportions for each row (i.e., for each level of variable1)
# Print the table
print(proportions_table)
test.df <- as.data.frame( proportions_table )
test.df <- test.df[4:6,]
ggplot(data=test.df, aes(x=Var1, y=Freq, fill=Var1)) +
geom_bar(stat = "identity") +
labs(title="Proportion of Successful Sales vs. Sales Tenure",
x="Sales Tenure", y="Proportion of Successful Sales") +
theme(legend.position="none")
# Percentile Testing
test.df <- as.data.frame( proportions_table )
test.df <- test.df[4:6,]
ggplot(data=test.df, aes(x=Var1, y=Freq, fill=Var1)) +
geom_bar(stat = "identity") +
labs(title="Proportion of Successful Sales vs. Sales Tenure",
x="Sales Tenure", y="Proportion of Successful Sales") +
theme(legend.position="none")
# Quartile testing
# table with factors and 3rd quantile
OWA <- group_by(data.clean, feed) %>%
summarise(mean=mean(weight), quant = quantile(weight, probs = 0.75)) %>%
arrange(desc(mean))
#Temp Frame
data.clean_noNA <- data.clean[complete.cases(data.clean),] %>% filter(!any(PRODUCTION_TOTAL_RMR)) %>% group_by(TENURE)
#boxplot
ggplot(data.clean_noNA, aes(data.clean_noNA$TENURE, data.clean_noNA$PRODUCTION_TOTAL_RMR)) +
geom_boxplot()
#Temp Frame
data.clean_noNA <- Sales_data[complete.cases(Sales_data),] %>% filter(!any(PRODUCTION_TOTAL_RMR)) %>% group_by(TENURE)
#boxplot
ggplot(data.clean_noNA, aes(data.clean_noNA$TENURE, data.clean_noNA$PRODUCTION_TOTAL_RMR)) +
geom_boxplot()
head(data.clean_noNA)
#Temp Frame
data.clean_noNA <- Sales_data[complete.cases(Sales_data),] %>% filter(!any(PRODUCTION_TOTAL_RMR)) %>% group_by(TENURE)
#boxplot
ggplot(data.clean_noNA, aes(x = data.clean_noNA$TENURE, y = data.clean_noNA$PRODUCTION_TOTAL_RMR)) +
geom_boxplot()
View(data.clean_noNA)
#Temp Frame
data.clean_noNA <- Sales_data[complete.cases(Sales_data),] %>% filter(!any(PRODUCTION_TOTAL_RMR > 0)) %>% group_by(TENURE)
#boxplot
ggplot(data.clean_noNA, aes(x = data.clean_noNA$TENURE, y = data.clean_noNA$PRODUCTION_TOTAL_RMR)) +
geom_boxplot()
View(data.clean_noNA)
#Temp Frame
data.clean_noNA <- Sales_data[complete.cases(Sales_data),] %>% filter(!any(PRODUCTION_TOTAL_RMR > 0)) #%>% group_by(TENURE)
#boxplot
ggplot(data.clean_noNA, aes(x = data.clean_noNA$TENURE, y = data.clean_noNA$PRODUCTION_TOTAL_RMR)) +
geom_boxplot()
#Temp Frame
data.clean_noNA <- Sales_data[complete.cases(Sales_data),] %>% filter(!any(PRODUCTION_TOTAL_RMR > 0)) #%>% group_by(TENURE)
#boxplot
ggplot(data.clean_noNA, aes(x = TENURE, y = PRODUCTION_TOTAL_RMR)) +
geom_boxplot()
View(data.clean_noNA)
#Temp Frame
data.clean_noNA <- Sales_data[complete.cases(Sales_data),] #%>% filter(!any(PRODUCTION_TOTAL_RMR > 0)) #%>% group_by(TENURE)
#boxplot
ggplot(data.clean_noNA, aes(x = TENURE, y = PRODUCTION_TOTAL_RMR)) +
geom_boxplot()
View(data.clean_noNA)
#Temp Frame
data.clean_noNA <- Sales_data[complete.cases(Sales_data),] %>% subset(data.clean_noNA, !rowSums(data.clean_noNA$PRODUCTION_TOTAL_RMR)) #%>% group_by(TENURE)
#Temp Frame
data.clean_noNA <- Sales_data[complete.cases(Sales_data),] %>% subset(data.clean_noNA, !rowSums(data.clean_noNA)) #%>% group_by(TENURE)
#Temp Frame
data.clean_noNA <- Sales_data[complete.cases(Sales_data),] %>% subset(data.clean_noNA, !rowSums(data.clean_noNA < 0) ) #%>% group_by(TENURE)
#Temp Frame
data.clean_noNA <- Sales_data[complete.cases(Sales_data),] %>% filter_all( all_vars( . > 0) ) #%>% group_by(TENURE)
#boxplot
ggplot(data.clean_noNA, aes(x = TENURE, y = PRODUCTION_TOTAL_RMR)) +
geom_boxplot()
#Temp Frame
data.clean_noNA <- Sales_data[complete.cases(Sales_data),] %>% filter( data.clean_noNA$PRODUCTION_TOTAL_RMR) #%>% group_by(TENURE)
#Temp Frame
data.clean_noNA <- Sales_data[complete.cases(Sales_data),] %>% filter( data.clean_noNA$PRODUCTION_TOTAL_RMR > 0) #%>% group_by(TENURE)
#Temp Frame
data.clean_noNA <- Sales_data[complete.cases(Sales_data),] %>% filter( PRODUCTION_TOTAL_RMR > 0) #%>% group_by(TENURE)
#boxplot
ggplot(data.clean_noNA, aes(x = TENURE, y = PRODUCTION_TOTAL_RMR)) +
geom_boxplot()
